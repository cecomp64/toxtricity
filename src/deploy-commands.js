// Generated by CoffeeScript 2.7.0
(function() {
  // Derived from https://discordjs.guide/creating-your-bot/command-handling.html#individual-command-files
  var Collection, REST, Routes, commandArray;

  ({Collection} = require('discord.js'));

  ({REST} = require('@discordjs/rest'));

  ({Routes} = require('discord-api-types/v9'));

  commandArray = (array_not_collection) => {
    var command, commandFiles, command_collection, commands, commandsPath, file, filePath, fs, path;
    fs = require('node:fs');
    path = require('node:path');
    commands = [];
    command_collection = new Collection();
    commandsPath = path.join(__dirname, 'commands');
    commandFiles = fs.readdirSync(commandsPath).filter((file) => {
      return file.endsWith('.js');
    });
// Dynamically read in command files
    for (file in commandFiles) {
      filePath = path.join(commandsPath, commandFiles[file]);
      command = require(filePath);
      commands.push(command.data.toJSON());
      command_collection.set(command.data.name, command);
    }
    if (array_not_collection) {
      return commands;
    } else {
      return command_collection;
    }
  };

  module.exports.commandArray = commandArray;

  module.exports.register = (client) => {
    var clientId, commands, guildId, rest, token;
    clientId = process.env.DISCORD_CLIENT_ID;
    token = process.env.DISCORD_TOKEN;
    guildId = null;
    commands = commandArray(true);
    rest = new REST({
      version: '9'
    }).setToken(token);
    console.log('Unregistering old commands...');
    // Delete old commands
    client.application.commands.cache.forEach((command, key) => {
      command.delete();
      return console.log('  Deleted command ' + command.id);
    });
    console.log('Registering commands...');
    // Register new commands global or per guild
    // guild is not supported, just here for informational purposes
    if (guildId === null) {
      return rest.put(Routes.applicationCommands(clientId), {
        body: commands
      }).then(() => {
        return console.log('Successfully registered global application commands.');
      }).catch(console.error);
    } else {
      return rest.put(Routes.applicationGuildCommands(clientId, guildId), {
        body: commands
      }).then(() => {
        return console.log('Successfully registered Guild application commands.');
      }).catch(console.error);
    }
  };

}).call(this);
